[
    {
        "name":"id",
        "type":"String",
        "default":"undefined",
        "desc":"边缘的id,可有可无，没有的时候，自动分配uuid"
    },
    {
        "name":"arrows",
        "type":"Boolean or String",
        "default":"undefined",
        "desc":"箭头的设置，通过字符串时，可以为arrows:'to, from, middle'或者是'to, from';这三个随意组合都可，要控制箭头的大小，提供对象",
        "moredetail":"arrows:{<br><span class='mrl20'><i class='colorblack'>to:Boolean or Object,</i>(默认是Object，设置为boolean，表示启用或者不启用结尾箭头的指向){</span><br><span class='mrl40'><i class='colorblack'>enabled:Object,</i>(默认是false，如果设置了scaleFactor属性，自动设置为true)</span><br><span class='mrl40'><i class='colorblack'>scaleFactor:Number,</i>(默认是1，箭头的大小)</span><br><span class='mrl40'><i class='colorblack'>type:String,</i>(默认是arrow，还可选'bar','circle')</span><br><span class='mrl20'>}</span><br><span class='mrl20'><i class='colorblack'>middle:Boolean or Object,</i>(类似与‘to’,线的中心有一个箭头，可通过scaleFactor设置为【负值】改变箭头的方向)</span><br><span class='mrl20'><i class='colorblack'>from:Boolean or Object</i>(和to一样的配置)，是线的开始位置有一箭头</span><br>}"
    },
    {
        "name":"arrowStrikethrough",
        "type":"Boolean",
        "default":"true",
        "desc":"如果为false，则边缘停在箭头处。如果您有粗线并且希望箭头以某点结束，则此选项非常有用。中箭头不受此影响；如果为true，那结束指向的箭头不一定是在最后一个点",
        "moredetail":"设置为false<img src='./images/example/arrowsFalse.jpg'/> <span class='mrl60'>设置为true</span><img src='./images/example/arrowsTrue.jpg'/>"
    },
    {
        "name":"chosen",
        "type":"Object或者是Boolean",
        "default":true,
        "desc":"如果为true，则【选择或悬停】在节点上将根据默认值更改【它及其标签】的特征（如高亮的颜色等等），如果为false，则在【选择】节点时不会对【节点或其标签】进行更改。如果提供了对象，则在选择节点时可以更精细地调整节点和标签特征。",
        "moredetail":"为对象的时候：{ node : function / boolean, label : function / boolean}。<br> node:true,(选择或悬停在节点上将根据默认值更改其特征。如果为false，则在选择节点时不会对节点进行任何更改),lable同理"
        
    },
    {
        "name":"color",
        "type":"Object或者是String",
        "default":"{}",
        "desc":"color对象包含edge线在每种情况下的颜色信息。具体包括属性下面表格见；<br>当type为string的时候，可以设置单一颜色，支持【rgba(120,32,14,1)】、【#ffffff】、red",
        "moredetail":"color:{<br><span class='mrl20'><i class='colorblack'>color:String,</i>(默认是#848484'；未选中或悬停时连线的颜色（假设在交互模块中启用了悬停）)</span><br><span class='mrl20'><i class='colorblack'>highlight：string,</i>(默认是'#848484'，选中边缘的颜色)/Object</span><br><span class='mrl20'><i class='colorblack'>hover:string,</i>(默认是'#848484'，鼠标悬停边上的颜色)</span><br><span class='mrl20'><i class='colorblack'>inherit:String/Boolean,</i>(默认是from,突出显示或悬停时边的颜色，可选项有true, false, 'from','to','both'，为from，与from的节点的颜色一致；为to时，和to节点的边框颜色一致，设置为both，会设置成渐变色，每次重绘都会重新计算颜色，比较耗性能)</span><br><span class='mrl20'><i class='colorblack'>opacity:Number</i>(默认是1.0，只做一次，性能影响不是很大)</span>}"
    },
    
    {
        "name":"dashes",
        "type":"Array或者是Boolean",
        "default":"false",
        "desc":"设置为true，边缘线会变成虚线",
        "moredetail":"设置为数组的时候，自定义折线[间隙长度,短划线长度,间隙长度,短划线长度...]<br>eg:[5,5] 或者[2,10,2,10],或者[5,5,3,3],随便写一个length>1的数组都可以"
       
    },
    {
        "name":"font",
        "type":"Object或者是String",
        "default":"false",
        "desc":"此对象定义标签的详细信息。表单中还支持简写（'size face color'），例如'14px arial red'",
        "moredetail":"<span>font:{<br><span class='mrl20'><i class='colorblack'>color:String,</i></span><br><span class='mrl20'><i class='colorblack'>size:Number(14),</i></span><br><span class='mrl20'><i class='colorblack'>face:String,</i>(默认是arial；同font-family),</span><br><span class='mrl20'><i class='colorblack'>background:String,</i>（默认是undefined。标签后面用提供的颜色绘制一个背景矩形）,</span><br><span class='mrl20'><i class='colorblack'>strokeWidth:Number,</i>（默认是0。作为背景矩形的另一种选择，可以围绕文本绘制边框。当提供大于0的值时，将绘制笔画）,</span><br><span class='mrl20'><i class='colorblack'>strokeColor:String,</i>（当比划的值大于0，比划的颜色）,</span><br><span class='mrl20'><i class='colorblack'>align:String,</i>（默认center，同text-align）,</span><br><span class='mrl20'><i class='colorblack'>vadjust:String,</i>（默认0，垂直方向的字体的矫正，定位是down）,</span><br><span class='mrl20'><i class='colorblack'>multi: Boolean or String,</i>（默认false，如果false，标签被视为使用基本字体绘制的纯文本。label中的内容可能是有【<b></b><i></i>标签; eg:'《b》This《/b》】如果true或'html'标签可能是多面的，带有粗体，斜体和代码标记，则解释为html。如果值为'markdown'或者'md'标签可能是多面的，则使用粗体，斜体和代码标记，将其解释为markdown。粗体，斜体，粗体斜体和等宽字体可分别在font.bold，font.ital，font.boldital和font.mono属性下设置）,</span><br><span class='mrl20'><i class='colorblack'>bold:Object/String,</i>(eg:'14px arial red')标签中粗体样式,当标签中有粗体样式时</span><br><span class='mrl40'>为Object：{</span><br><span class='mrl60'><i class='colorblack'>color:String,</i>(默认是#343434)</span><br><span class='mrl60'><i class='colorblack'>size:Number,</i>(默认是14)</span><br><span class='mrl60'><i class='colorblack'>face:String,</i>(默认是arial，字体系列)</span><br><span class='mrl60'><i class='colorblack'>mod:String,</i>(默认是bold)</span>}<br><span class='mrl60'><i class='colorblack'>vadjust:String,</i>(默认是0，对标签文本中粗体斜体字体的垂直定位进行字体特定的校正。（正向下。）默认为基本字体的valign)</span><br><span class='mrl40'></span>}<br><span class='mrl20'><i class='colorblack'>ital:同bold,</i>标签中斜体样式，,当标签中有斜体样式时</span><br><span class='mrl20'><i class='colorblack'>boldital:同bold,</i>标签中粗斜体样式,当标签中有粗斜体样式时</span><br><span class='mrl20'><i class='colorblack'>mono:同bold,</i>标签中等宽字体样式,当标签中有等宽样式时</span>"
       
    },
    {
        "name":"from",
        "type":"Number or String",
        "default":"undefined",
        "desc":"一个点和另一个点连接的from节点的位置，必须有from节点的id"
    },
    {
        "name":"to",
        "type":"Number or String",
        "default":"undefined",
        "desc":"一个点和另一个点连接的to节点的位置，必须有to节点的id"
    },
    {
        "name":"hidden",
        "type":"Boolean",
        "default":"false",
        "desc":"如果为true，则不显示节点。它仍然是物理模拟的一部分,不是写在option中，写在node数组中每一项节点向中",
        "moredetail":"var nodesArray  = [{id: 1, label: '1', group: 0, hidden:true}]"
    },
    {
        "name":"label",
        "type":"String",
        "default":"undefined",
        "desc":"边缘的标签。HTML在这里不起作用，因为网络使用HTML5 Canvas。"
    },
    {
        "name":"labelHighlightBold",
        "type":"Boolean",
        "default":"true",
        "desc":"确定选择边缘时标签是否变为粗体。"
    },
    {
        "name":"length",
        "type":"Number",
        "default":"undefined",
        "desc":"物理模拟赋予边缘弹簧长度。该值可以覆盖静止时弹簧的长度"
    },
    {
        "name":"physics",
        "type":"Boolean",
        "default":"true",
        "desc":"如果为true，是物理模拟的一部分，会联动"
    },
    {
        "name":"scaling",
        "type":"Object",
        "default":"object",
        "desc":"指定了value属性的值，会根据当前对象中设置的属性来缩放边的宽度；缩放时会忽略width属性",
        "moredetail":"scaling:{<br><span class='mrl20'><i class='colorblack'>min:Number,</i>(默认是1，如果边具有值，则边的宽度由值，缩放函数和最小最大值确定。最小值是允许的最小值。)</span><br> <span class='mrl20'><i class='colorblack'>max:Number,</i>(默认是15，使用了value之后允许缩放时最宽的宽度)</span><br> <span class='mrl20'><i class='colorblack'>label:Boolean/Object,</i>(默认是Object，如果为false，不允许标签和边缘一起缩放){</span><br> <span class='mrl40'><i class='colorblack'>enabled:Boolean,</i>(默认是false，缩放标签的开关，如果定义了该对象中的其他属性，自动设置为true)</span><br> <span class='mrl40'><i class='colorblack'>min:Number,</i>(默认是14，缩放时标签的最小字体大小)</span><br> <span class='mrl40'><i class='colorblack'>max:Number,</i>(默认是30，缩放时标签的最大字体大小)</span><br> <span class='mrl40'><i class='colorblack'>maxVisible:Number,</i>(默认是30，放大时，字体会放大，当字体大小大于该值时，会隐藏label)</span><br> <span class='mrl40'><i class='colorblack'>drawThreshold:Number,</i>(默认是5，缩小时，字体大小的最低限制，和maxVisible配置使用，缩小时显示重要的节点，不让变小，或者放大时仅显示其余节点)</span><br><span class='mrl20'>}</span><br><span class=''mrl20><i class='colorblack'>customScalingFunction:function ,</i>(如果edge.value设置了的话，根据value的值确定节点大小的缩放方式，<b class='colorblack'>默认的函数在完整选项中可看到</b>，该函数接收集合的最小值，最大值，所有值的总和，最后接收它所处理的节点或边的值。它必须返回0到1之间的值。然后节点和边计算它们的大小，如下所示【注意2】)</span>}<br>【注意】该值时写在列表中，写在option中不起作用 <br>{id: 10, label: '10', group: 3,value:20,scaling:{label:{maxVisible:80,drawThreshold:5}}},<br>【 注意2 】<br> var scale = customScalingFunction（min，max，total，value）;<br>var diff = maxWidth  -  minWidth;<br>myWidth = minWidth + diff * scale;<br><b style='color:blue'>maxWidth和minWidth是值scaling.max 和scaling.min在选项中提供。</b>"
    },
    {
        "name":"value",
        "type":"Number",
        "default":"undefined",
        "desc":"设置值后，将使用上面定义的缩放对象中的选项缩放边缘的宽度。"
    },

    {
        "name":"selectionWidth",
        "type":"Number或者Function",
        "default":"1",
        "desc":"提供了数字，该值作为宽度 width",
        "moredetail":"如果是函数的话，可以根据需求返回不同的宽度 <br>selectionWidth：function(width){return width* 2;}"
    },
    {
        "name":"shadow",
        "type":"Boolean或者Object",
        "default":"Object",
        "desc":"如果为true，则边缘使用默认设置投射阴影。曲线的绘制比直线绘制时间长，但是效果更好",
        "moredetail":"shadow:{<br><span class='mrl20'><i class='colorblack'>enabled:Booelan,</i>(默认是false,对象中的其他任何属性定义了，都会将其设置为true)</span><br><span class='mrl20'><i class='colorblack'>color:String,</i>(默认是rgba(0,0,0,0.5)，阴影颜色，支持的格式'rgb（255,255,255）'，'rgba（255,255,255,1）'和'#FFFFFF')</span><br><span class='mrl20'><i class='colorblack'>size:Number,</i>(默认是10，阴影的模糊大小)</span><br><span class='mrl20'><i class='colorblack'>x:Number,</i>(默认是5，x偏移量)</span><br><span class='mrl20'><i class='colorblack'>y:Number</i>(默认是5，y偏移量)</span><br>}"
    },
    {
        "name":"smooth",
        "type":"Boolean或者Object",
        "default":"Object",
        "desc":"如果为true，则将边绘制为动态二次贝塞尔曲线。。这可以通过提供对象来进一步细化。拖动节点的时候，改节点上的关联线是直线还是曲线",
        "moredetail":"smooth:{<br><span class='mrl20'><i class='colorblack'>enabled:Booelan,</i>(默认是true,对象中的其他任何属性定义了，都会将其设置为true（图一，图二）)</span><br><span class='mrl20'><i class='colorblack'>type:String,</i>(默认是'dynamic'，可选的是：'dynamic', 'continuous', 'discrete', 'diagonalCross', 'straightCross', 'horizontal', 'vertical', 'curvedCW', 'curvedCCW', 'cubicBezier'具体可看<a href='https://visjs.github.io/vis-network/examples/network/edgeStyles/smooth.html'>查看不同类型的例子</a>)</span><br><span class='mrl20'><i class='colorblack'>forceDirection:String or Boolean,</i>(默认是false，这个选项仅用于type是cubicBezier曲线。作为字符串的时候，可选项有：'horizontal', 'vertical', 'none'，当为boolean，为true，选择'horizontal'，为false，节点与节点的距离更大，如果很大，就为水平，与分层布局一起使用（图三）)</span><br><span class='mrl20'><i class='colorblack'>roundness:Number</i>(默认是0.5，范围0~1，曲线的圆度)</span><br>}<br><img src='./images/example/smooth1.jpg'><img src='./images/example/smooth2.jpg' class='mrl40'><img src='./images/example/smooth3.jpg' class='mrl40'>"
    },
    {
        "name":"title",
        "type":"String or Element",
        "default":"undefined",
        "desc":"用户将鼠标悬停在节点上时显示的标题。标题可以是HTML元素或包含纯文本或HTML的字符串",
        "moredetail":"纯文本：{id: 8, label: '8', group: 2,title:'我是标题'}<br>HTML：{id: 8, label: '8', group: 2,title:'《b style='color:red'》我是html的标题《/b》'}<br> 《》 代表<>"
    },
    {
        "name":"widthConstraint",
        "type":"Number or Boolean or Object",
        "default":"false",
        "desc":"设置数字，将边缘标签最大宽度设为该值",
        "moredetail":"当为对象的时候<br>widthConstraint:{<br><span class='mrl20'><i class='colorblack'>maximum:Number,</i>(默认是undefined,如果指定了数字，边缘标签的最大宽度该值，边缘便签的线条以空格打破来保持最大值)</span><br>}<br><img src='./../../images/example/edgeCon1.jpg'/><img  class='mrl60' src='./../../images/example/edgeCon2.jpg'/>"
    },
    {
        "name":"width",
        "type":"Number",
        "default":"1",
        "desc":"边缘的宽度。如果设置了edge.value，则不使用此值。"
    }
]
