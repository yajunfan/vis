[
    {
        "name":"id",
        "type":"String",
        "default":"undefined",
        "desc":"节点的id，唯一，且必须"
    },
    {
        "name":"borderWidth",
        "type":"Number",
        "default":"1",
        "desc":"节点的边框宽度"
    },
    {
        "name":"borderWidthSelected",
        "type":"Number",
        "default":"2",
        "desc":"选中节点的边框宽度"
    },
    {
        "name":"brokenImage",
        "type":"String",
        "default":"",
        "desc":"当shape设置为image或时circularImage，如果无法解析图像(node.image)选项中提供的URL，则此选项可以是备份图像的URL。"
    },
    {
        "name":"chosen",
        "type":"Object or Boolean",
        "default":true,
        "desc":"如果为true，则【选择或悬停】在节点上将根据默认值更改【它及其标签】的特征（如高亮的颜色等等），如果为false，则在【选择】节点时不会对【节点或其标签】进行更改。如果提供了对象，则在选择节点时可以更精细地调整节点和标签特征。",
        "moredetail":"为对象的时候：{ node : function / boolean, label : function / boolean}。<br> node:true,(选择或悬停在节点上将根据默认值更改其特征。如果为false，则在选择节点时不会对节点进行任何更改),lable同理",
        "moreDetailMOre":""
    },
    {
        "name":"color",
        "type":"Object or String",
        "default":"{}",
        "desc":"color对象包含节点在每种情况下的颜色信息。具体包括属性下面表格见；<br>当type为string的时候，可以设置单一颜色，支持【rgba(120,32,14,1)】、【#ffffff】、red",
        "moredetail":"color:{<br><span class='mrl20'><i class='colorblack'>border:String,</i>(未选中或悬停时节点边框的颜色（假设在交互模块中启用了悬停）)</span><br><span class='mrl20'><i class='colorblack'>background:String,</i>(同border)</span><br><span class='mrl20'><i class='colorblack'>highlight：string,</i>(选中节点的颜色)/Object</span><br><span class='mrl40'><i class='colorblack'>highlight:{border:String(选中节点的边框颜色),background:String(选中节点的背景色)},</i></span>,<br><span class='mrl20'><i class='colorblack'>hover:string,</i>(鼠标悬停节点上的颜色)/Object</span><br><span class='mrl40'><i class='colorblack'>hover:{border:String,background:String}(假设启用了悬停)</span><br>}"
    },
    {
        "name":"fixed",
        "type":"Object or Boolean",
        "default":"Object:{x:false,y:false}",
        "desc":"当该值为Boolean，且为true的时候，那节点固定，不可以移动",
        "moredetail":"当该值为对象的时候，可以设定在x轴 or y轴的移动，设置为false，可以移动，设置为true，不可移动"
    },
    {
        "name":"font",
        "type":"Object or String",
        "default":"false",
        "desc":"此对象定义标签的详细信息。表单中还支持简写（'size face color'），例如'14px arial red'",
        "moredetail":"<span>font:{<br><span class='mrl20'><i class='colorblack'>color:String,</i></span><br><span class='mrl20'><i class='colorblack'>size:Number(14),</i></span><br><span class='mrl20'><i class='colorblack'>face:String,</i>(默认是arial；同font-family),</span><br><span class='mrl20'><i class='colorblack'>background:String,</i>（默认是undefined。标签后面用提供的颜色绘制一个背景矩形）,</span><br><span class='mrl20'><i class='colorblack'>strokeWidth:Number,</i>（默认是0。作为背景矩形的另一种选择，可以围绕文本绘制边框。当提供大于0的值时，将绘制笔画）,</span><br><span class='mrl20'><i class='colorblack'>strokeColor:String,</i>（当比划的值大于0，比划的颜色）,</span><br><span class='mrl20'><i class='colorblack'>align:String,</i>（默认center，同text-align）,</span><br><span class='mrl20'><i class='colorblack'>vadjust:String,</i>（默认0，垂直方向的字体的矫正，定位是down）,</span><br><span class='mrl20'><i class='colorblack'>multi: Boolean or String,</i>（默认false，如果false，标签被视为使用基本字体绘制的纯文本。label中的内容可能是有【<b></b><i></i>标签; eg:'《b》This《/b》】如果true或'html'标签可能是多面的，带有粗体，斜体和代码标记，则解释为html。如果值为'markdown' or 'md'标签可能是多面的，则使用粗体，斜体和代码标记，将其解释为markdown。粗体，斜体，粗体斜体和等宽字体可分别在font.bold，font.ital，font.boldital和font.mono属性下设置）,</span><br><span class='mrl20'><i class='colorblack'>bold:Object/String,</i>(eg:'14px arial red')标签中粗体样式,当标签中有粗体样式时</span><br><span class='mrl40'><i class='colorblack'>为Object：{</span><span class='mrl60'><i class='colorblack'>color:String,</i>(默认是#343434)</span><br><span class='mrl60'><i class='colorblack'>size:Number,</i>(默认是14)</span><br><span class='mrl60'><i class='colorblack'>face:String,</i>(默认是arial，字体系列)</span><br><span class='mrl60'><i class='colorblack'>mod:String,</i>(默认是bold)</span>}<br><span class='mrl60'><i class='colorblack'>vadjust:String,</i>(默认是0，对标签文本中粗体斜体字体的垂直定位进行字体特定的校正。（正向下。）默认为基本字体的valign)</span><br><span class='mrl40'></span>}<br><span class='mrl20'><i class='colorblack'>ital:同bold,</i>标签中斜体样式，,当标签中有斜体样式时</span><br><span class='mrl20'><i class='colorblack'>boldital:同bold,</i>标签中粗斜体样式,当标签中有粗斜体样式时</span><br><span class='mrl20'><i class='colorblack'>mono:同bold,</i>标签中等宽字体样式,当标签中有等宽样式时</span>"
       
    },
    {
        "name":"group",
        "type":"String",
        "default":"undefined",
        "desc":"如果不是undefined，默认节点所属组，同组的节点【颜色 or 样式】一致，样式可以通过node.shape来设置"
    },
    {
        "name":"heightConstraint",
        "type":"Number or Object or Boolean",
        "default":"false",
        "desc":"如果为false，则不应用heightConstraint；如果指定了数字，则该值将用作节点的最小高度。如果小于该值，节点的高度将设置为最小值。",
        "moredetail":"为对象的时候：{ minimum : Number, valign : String}。<br><span class='mrl20'>{</span><br><span class='mrl40'><i class='colorblack'>minimum:undefined,</i>(如果指定了数字，则该值将用作节点的最小高度。如果小于该值，节点的高度将设置为最小值。)</span><br><span class='mrl40'><i class='colorblack'>valign:'middle',</i>(可使用'top'，'middle'和'bottom';指定时，如果标签文本的高度小于最小值（包括任何顶部或底部边距），则它将垂直偏移到指定位置)</span><br><span class='mrl20'>}</span>"
    },
    {
        "name":"hidden",
        "type":"Boolean",
        "default":"false",
        "desc":"如果为true，则不显示节点。它仍然是物理模拟的一部分,不是写在option中，写在node数组中每一项节点向中",
        "moredetail":"var nodesArray  = [{id: 1, label: '1', group: 0, hidden:true}]"
    },
    {
        "name":"icon",
        "type":"Object",
        "default":"Object",
        "desc":"当节点的shape设置为icon的时候",
        "moredetail":"icon:{<br><span class='mrl20'><i class='colorblack'>face:String,</i>(默认是'FontAwesome'；可选项是：'FontAwesome'和'Ionicons')</span><br><span class='mrl20'><i class='colorblack'>code:String,</i>(默认是undefined；例如，这是图标的代码'\uf007')</span><br><span class='mrl20'><i class='colorblack'>size:Number,</i>(默认是50；图标的大小)</span><br><span class='mrl20'><i class='colorblack'>color:String,</i>(默认是'#2B7CE9'；图标的颜色)</span><br>}"
    },
    
    {
        "name":"image",
        "type":"Object or String",
        "default":"undefined",
        "desc":"当节点的shape是【image】 or 【circularImage】；值为图片的url，找不到时使用brokeImage，在没有就是默认的纯色填充",
        "moredetail":"image:{<br><span class='mrl20'><i class='colorblack'>unselected:String,</i>(默认是undefined；未选择（默认）图像URL。)</span><br><span class='mrl20'><i class='colorblack'>selected:String,</i>(默认是undefined；所选图片网址。)</span><br>}"
    },
    {
        "name":"label",
        "type":"String",
        "default":"undefined",
        "desc":"节点的文本"
    },
    {
        "name":"labelHighlightBold",
        "type":"Boolean",
        "default":"true",
        "desc":"确定选择节点时标签是否变为粗体。"
    },
    {
        "name":"level",
        "type":"String",
        "default":"undefined",
        "desc":"给节点分层级，级别确定节点的位置"
    },
    {
        "name":"margin",
        "type":"Number or Object",
        "default":"5",
        "desc":"当形状设置为box、circle、database、icon、text；label的边距",
        "moredetail":"margin:{<br><span class='mrl20'><i class='colorblack'>top:Number,</i>(默认是5)</span><br><span class='mrl20'><i class='colorblack'>bottom:Number,</i>(默认是5)</span><br><span class='mrl20'><i class='colorblack'>left:Number,</i>(默认是5)</span><br><span class='mrl20'><i class='colorblack'>right:Number,</i>(默认是5)</span><br>}"
    },
    {
        "name":"mass",
        "type":"Number",
        "default":"1",
        "desc":"barnesHut物理模型（默认启用）基于倒置重力模型。",
        "moredetail":"通过增加节点的质量，可以增加它的排斥力。建议不要使用0到1之间的值。不允许使用负值或零值。这些将生成控制台错误，并将设置为1。值越大，失重性越显著"
    },
    {
        "name":"physics",
        "type":"Boolean",
        "default":"true",
        "desc":"如果为false，除了手动拖动外，它不会移动,并且【mass】设置的值将不会起作用；为true的时候，移动一个点的时候，其他的也会相关联的移动；"
    },
    {
        "name":"shadow",
        "type":"Boolean or Object",
        "default":"false",
        "desc":"如果为true，则节点使用默认设置投射阴影。这可以通过提供对象来进一步细化。",
        "moredetail":"shadow:{<br><span class='mrl20'><i class='colorblack'>enabled:Booelan,</i>(默认是false,对象中的其他任何属性定义了，都会将其设置为true)</span><br><span class='mrl20'><i class='colorblack'>color:String,</i>(默认是rgba(0,0,0,0.5)，阴影颜色，支持的格式'rgb（255,255,255）'，'rgba（255,255,255,1）'和'#FFFFFF')</span><br><span class='mrl20'><i class='colorblack'>size:Number,</i>(默认是10，阴影的模糊大小)</span><br><span class='mrl20'><i class='colorblack'>x:Number,</i>(默认是5，x偏移量)</span><br><span class='mrl20'><i class='colorblack'>y:Number,</i>(默认是5，y偏移量)</span><br>}"
    },
    {
        "name":"shape",
        "type":"String",
        "default":"ellipse",
        "desc":"节点的外观。有两种类型的节点。一种类型的标签位于其中，另一种类型的标签位于其下方",
        "moredetail":"与它里面的标签类型有：<span style='color:blue'>ellipse(椭圆)，circle(圆形)，database(圆柱)，box(圆角矩形)，text(纯文本)。</span><br>与标签在它之外的有：<span style='color:green'> <b>image(直接图片),circularImage(图片在圆形中),icon,</b> diamond(菱形)，dot(圆形)，star(五角星)，triangle(向上三角形)， triangleDown(向下三角形)，hexagon(六边形)，square(正方形)</span><br>对于icon、image、circularImage<br>【 icon 】: 如果是FontAwesome，提前引入font-awesome.css<b style='color:black;'>{id: 4, label: '4', group: 1,shape:'icon',icon: {face: 'FontAwesome'(默认此类型，可以省略),code:'\\uf007'}}</b>,<br><span class='mrl20'>如果是ionicons,引入http://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css，<b style='color:black;'>{id: 4, label: '4', group: 1,shape:'icon',icon: {<b>face: 'Ionicons',</b>code:'\\uf007'}}</b></span><br>【 image 】： <b style='color:black;'>{id: 4, label: '4', group: 1,shape:'image',image: '图片的路径'}</b>想要给图片加边框，使用node.shapeProperties属性<br>【 circularImage 】： <b style='color:black;'>{id: 4, label: '4', group: 1,shape:'imcircularImageage',image: '图片的路径'}</b>"
    },
    {
        "name":"shapeProperties",
        "type":"Object",
        "default":"Object",
        "desc":"特定形状的节点的配置，包括具有边框的所有形状的节点、box、image/circularImage",
        "moredetail":"shapeProperties:{<br><span class='mrl20'><i class='colorblack'>borderDashes:Array or Boolean,</i>(默认是false,属性适用于具有边框的所有形状。您可以通过提供数组来设置破折号。数组格式：[短划线长度，间隙长度]。你也可以使用布尔值，false是禁用，而true是默认值[5,15]。)</span><br><img src='../../../images/example/dashed.jpg'/><br><span class='mrl20'><i class='colorblack'>borderRadius:Number,</i>(默认是6,此属性仅用于【box】形状。设置圆角的radius)</span><br><span class='mrl20'><i class='colorblack'>useImageSize:Boolean,</i>(默认是false,此属性仅适用于【 image 】和【 circularImage 】形状。如果为false，则使用size选项，如果为true，则使用size的大小。 重要提示：如果将其设置为true，则无法使用值选项缩放图像！)</span><br><span class='mrl20'><i class='colorblack'>interpolation:Booelan,</i>(默认是true,此属性仅适用于【 image 】和【 circularImage 】形状；缩小时对图片的重新计算，展示最好的图片)</span><br><span class='mrl20'><i class='colorblack'>useBorderWithImage:Booelan,</i>(默认是false,此属性仅适用于【 image 】形状；为true，使用node.color对象，背后会绘制一个带背景色，带边框的矩形，边框的宽度node.borderWidth会作用于所有的节点)</span>}"
    },
    {
        "name":"size",
        "type":"Number",
        "default":"25",
        "desc":"节点的大小，当列表中每一项中没有设置时，使用这个全局尺寸{id：1，label:'2'}"
    },
    {
        "name":"title",
        "type":"String or Element",
        "default":"undefined",
        "desc":"用户将鼠标悬停在节点上时显示的标题。标题可以是HTML元素或包含纯文本或HTML的字符串",
        "moredetail":"纯文本：{id: 8, label: '8', group: 2,title:'我是标题'}<br>HTML：{id: 8, label: '8', group: 2,title:'《b style='color:red'》我是html的标题《/b》'}<br> 《》 代表<>"
    },
    {
        "name":"scaling",
        "type":"Object",
        "default":"object",
        "desc":"指定了value属性的值，会根据当前对象中设置的属性来缩放节点；只有启用了scaling.label.enabled：true的时候，才会缩放，因为大小时取决于标签的大小",
        "moredetail":"只有当标签缩放启用了可扩展的有：ellipse、circle、database、box、text<br>始终可扩展为：image、circularImage、diamond、dot、star、triangle、triangleDown、hexagon、square、icon。q启用缩放时，会忽略size属性<br>scaling:{<br><span class='mrl20'><i class='colorblack'>min:Number,</i>(默认是10，如果节点具有值，则它们的大小由值，缩放函数和最小最大值确定。最小值是允许的最小值。)</span><br> <span class='mrl20'><i class='colorblack'>max:Number,</i>(默认是30，缩放时最大的大小)</span><br> <span class='mrl20'><i class='colorblack'>label:Boolean/Object,</i>(默认是Object){</span><br> <span class='mrl40'><i class='colorblack'>enabled:Boolean,</i>(默认是false，缩放标签的开关，如果定义了该对象中的其他属性，自动设置为true)</span><br> <span class='mrl40'><i class='colorblack'>min:Number,</i>(默认是14，缩放时标签的最小字体大小)</span><br> <span class='mrl40'><i class='colorblack'>max:Number,</i>(默认是30，缩放时标签的最大字体大小)</span><br> <span class='mrl40'><i class='colorblack'>maxVisible:Number,</i>(默认是30，放大时，字体会放大，当字体大小大于该值时，会隐藏label)</span><br> <span class='mrl40'><i class='colorblack'>drawThreshold:Number,</i>(默认是5，缩小时，字体大小的最低限制，和maxVisible配置使用，缩小时显示重要的节点，不让变小， or 放大时仅显示其余节点)</span><br><span class='mrl20'>}</span><br>}<br>【注意】该值时写在列表中，写在option中不起作用 <br>{id: 10, label: '10', group: 3,value:20,scaling:{label:{maxVisible:80,drawThreshold:5}}},"
    },
    {
        "name":"value",
        "type":"Number",
        "default":"undefined",
        "desc":"设置值后，将使用上面定义的缩放对象中的选项缩放节点。"
    },
    {
        "name":"widthConstraint",
        "type":"Number or Boolean or Object",
        "default":"false",
        "desc":"设置数字，将节点的最小和最大宽度设为该值；当label在节点内的时候，会根据内容先撑开，感觉更像是设置的padding-left和padding-right；当值设为很小的时候，label会换行，节点会保持一个最小值，里边的内容会换行",
        "moredetail":"当为对象的时候<br>widthConstraint:{<br><span class='mrl20'><i class='colorblack'>minimum:Number(默认是undefined,节点的最小宽度该值，如果节点的宽度小于该值，那么以节点的值为最小宽度值)</span><br><span class='mrl20'><i class='colorblack'>maximum:Number,</i>(默认是undefined,节点的最大宽度该值，节点的label会断开以空格来填充，以保持低于最大值)</span><br><img src='./../../images/example/width1.jpg'/><img  class='mrl60' src='./../../images/example/width2.jpg'/>"
    },
    {
        "name":"x",
        "type":"Number",
        "default":"undefined",
        "desc":"节点的初始x位置，使用分层布局的时候，根据布局改变。【注意】使用了network.stabilize()会导致布局与初始位置不同。为了锁定位置 or 回显，不适用稳定布局， or 使用 【 physics 】 or  【 fixed 】 属性"
    },
    {
        "name":"y",
        "type":"Number",
        "default":"undefined",
        "desc":"节点的初始y位置，其他同x"
    }
]
